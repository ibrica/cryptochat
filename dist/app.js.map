{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,6BAA6B;AAC7B,8CAA8C;AAC9C,iCAAiC;AAEjC,qCAAuC;AACvC,0CAA4C;AAM5C,MAAM,GAAG;IAGP;QACE,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QAErB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAGD;;OAEG;IACK,WAAW;QACjB,wEAAwE;QACxE,oBAAoB;QACpB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,CACV,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAC3E,CAAC;IACJ,CAAC;IAGD;;OAEG;IACK,WAAW;QACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YAC/D,MAAM,GAAG,GAAQ,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;YACxC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;YAEjB,IAAI,CAAC,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;YACzE,MAAM,UAAU,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;YAErC,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;YACjC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAEnE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAGD;;OAEG;IACK,MAAM;QACZ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,oBAAW,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,kBAAU,CAAC,CAAC;IACpC,CAAC;CAIF;AACD,kBAAe,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC","sourcesContent":["import * as express from 'express';\nimport * as path from 'path';\nimport * as cookieParser from 'cookie-parser';\nimport * as logger from 'morgan';\nimport { Request, Response, NextFunction } from \"express\";\nimport { indexRoutes } from './routes';\nimport { userRoutes } from './routes/users';\nimport passport from \"passport\";\n// API keys and Passport configuration\nimport * as passportConfig from \"./config/passport\";\n\n\nclass App {\n  public app: express.Application;\n\n  constructor() {\n    this.app = express();\n    \n    this.middlewares();\n    this.routes();\n    this.catchErrors();\n  }\n  \n  \n  /**\n   * Middlewares\n   */\n  private middlewares(): void {\n    // this.app.use(favicon(path.join(__dirname, \"public\", \"favicon.ico\")));\n    // view engine setup\n    this.app.set('views', path.join(__dirname, '../views'));\n    this.app.set('view engine', 'ejs');\n\n    this.app.use(logger('dev'));\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: false }));\n    this.app.use(cookieParser());\n    this.app.use(\n      express.static(path.join(__dirname, \"../public\"), { maxAge: 31557600000 })\n    );\n  }\n  \n  \n  /**\n   * Error Handlers\n   */\n  private catchErrors(): void {\n    this.app.use((req: Request, res: Response, next: NextFunction) => {\n      const err: any = new Error(\"Not Found\");\n      err.status = 404;\n      \n      next(err);\n    });\n    \n    this.app.use((err: any, req: Request, res: Response, next: NextFunction) => {\n      const statusCode = err.status || 500;\n      \n      res.locals.message = err.message;\n      res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n      \n      res.status(statusCode).send(\"Server Error\");\n    });\n  }\n  \n  \n  /**\n   * Api Routes\n   */\n  private routes(): void {\n    this.app.use(\"/\", indexRoutes);\n    this.app.use(\"/user\", userRoutes);\n  }\n\n \n\n}\nexport default new App().app;\n\n\n\n\n\n"]}