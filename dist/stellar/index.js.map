{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/stellar/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,yCAAyC;AACzC,6CAMuB;AACvB,oCAAmC;AAEnC;;GAEG;AACH,SAAe,iBAAiB;;QAC9B,MAAM,IAAI,GAAG,qBAAO,CAAC,MAAM,EAAE,CAAA;QAC7B,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;QAEhC,MAAM,KAAK,CAAC,sDAAsD,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;QAErF,OAAO,IAAI,CAAA;IACb,CAAC;CAAA;AAED,SAAe,GAAG;;QAChB,MAAM,IAAI,GAAG,MAAM,iBAAiB,EAAE,CAAA;QAEtC,OAAO,CAAC,GAAG,CAAC;;YAEF,IAAI,CAAC,MAAM,EAAE;UACf,IAAI,CAAC,SAAS,EAAE;GACvB,CAAC,CAAA;QAEF,MAAM,GAAG,GAAG,gDAAgD,IAAI,CAAC,SAAS,EAAE,EAAE,CAAA;QAE9E,OAAO,CAAC,GAAG,CAAC;;MAER,GAAG;GACN,CAAC,CAAA;QAEF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA;QACjC,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;IACvC,CAAC;CAAA;AAED,SAAsB,GAAG;;QAEvB,IAAI;YACA,iDAAiD;YACjD,qBAAO,CAAC,cAAc,EAAE,CAAC;YACzB,wBAAwB;YACxB,MAAM,aAAa,GAAG,IAAI,oBAAM,CAAC,qCAAqC,CAAC,CAAC;YAExE,qDAAqD;YACrD,MAAM,kBAAkB,GAAG,qBAAO,CAAC,UAAU,CAAC,0DAA0D,CAAC,CAAA;YAEzG,4BAA4B;YAC5B,MAAM,WAAW,GAAG,MAAM,aAAa,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAA;YAEnF,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAA;YAC9D,MAAM,WAAW,GAAG,IAAI,gCAAkB,CAAC,WAAW,CAAC;iBAChD,YAAY;YACX,mCAAmC;YACnC,uBAAS,CAAC,aAAa,CAAC;gBACtB,WAAW,EAAE,OAAO,CAAC,SAAS,EAAE;gBAChC,eAAe,EAAE,GAAG;aACrB,CAAC,CACH,CAAC,KAAK,EAAE,CAAA;YAEf,6BAA6B;YAC7B,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;YAEpC,mCAAmC;YACnC,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;YAClE,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAA;SACzC;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAA;SAC/C;IACL,CAAC;CAAA;AAjCD,kBAiCC;AAAA,CAAC","sourcesContent":["// Classes required to create new account\nimport {\n    Keypair, // Keypair represents public and secret keys.\n    Network, // Network provides helper methods to get the passphrase or id for different stellar networks.\n    Operation, // Operation helps you represent/build operations in Stellar network.\n    Server, // Server handles the network connections.\n    TransactionBuilder // Helps you construct transactions.\n  } from 'stellar-sdk';\nimport * as fetch from 'node-fetch'\n\n/**\n *  Generates a keypair and funds account with friendbot\n */\nasync function createTestAccount() {\n  const pair = Keypair.random()\n  console.log('Requesting Lumens')\n\n  await fetch(`https://horizon-testnet.stellar.org/friendbot?addr=${pair.publicKey()}`)\n\n  return pair\n}\n\nasync function run() {\n  const pair = await createTestAccount()\n\n  console.log(`\n    Congrats, you have a Stellar account in the test network!\n    seed: ${pair.secret()}\n    id: ${pair.publicKey()}\n  `)\n\n  const url = `https://horizon-testnet.stellar.org/accounts/${pair.publicKey()}`\n\n  console.log(`\n    Loading account from test network:\n    ${url}\n  `)\n\n  const response = await fetch(url)\n  const payload = await response.json()\n}\n  \nexport async function pay(){\n\n  try {\n      // Tell the Stellar SDK you are using the testnet\n      Network.useTestNetwork();\n      // point to testnet host\n      const stellarServer = new Server('https://horizon-testnet.stellar.org');\n    \n      // Never put values like the an account seed in code.\n      const provisionerKeyPair = Keypair.fromSecret('SA72TGXRHE26WC5G5MTNURFUFBHZHTIQKF5AQWRXJMJGZUF4XY6HFWJ4')\n    \n      // Load account from Stellar\n      const provisioner = await stellarServer.loadAccount(provisionerKeyPair.publicKey())\n    \n      console.log('creating account in ledger', keypair.publicKey())\n      const transaction = new TransactionBuilder(provisioner)\n            .addOperation(\n              // Operation to create new accounts\n              Operation.createAccount({\n                destination: keypair.publicKey(),\n                startingBalance: '2'\n              })\n            ).build()\n    \n      // Sign the transaction above\n      transaction.sign(provisionerKeyPair)\n    \n      // Submit transaction to the server\n      const result = await stellarServer.submitTransaction(transaction);\n      console.log('Account created: ', result)\n    } catch (e) {\n      console.log('Stellar account not created.', e)\n    }\n};\n  "]}